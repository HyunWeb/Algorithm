// 인접 리스트 방식 O(n)
// 연결된 정보만 저장하므로 사실상 인접 행렬보다 효율적인 메모리의 사용이 가능하다. 
// JS로 인접 리스트를 표현할때도 2차원 배열을 이용하면 된다. 

const graph1 = Array.from(Array(3), () => []);

//[노드, 거리] 형식으로 저장
graph[0].push([1, 7]);
graph[0].push([2, 5]);

graph[1].push([0, 7]);

graph[2].push([0, 5]);

console.log(graph);

//or
const graph2 = [
    [[1, 7], [2, 5]],
    [[0, 7]],
    [[0, 5]]
];

//객체를 이용해도 된다. 
// 노드의 값이 숫자가 아닌 경우에 유용하게 쓸 수 있다. 
// JS의 배열은 내부적으로 객체이기 때문에 배열 예시와 사실상 동일하다. 

const graph3 = {
    0: [[1, 7], [2, 5]],
    1: [[0, 7]],
    2: [[0, 5]]
};

const graph4 = {
    "A": ["B", "C"],
    "B": ["A"],
    "C": ["A"]
};
